AWSTemplateFormatVersion: "2010-09-09"

Description: Cloudformation resource template.

Resources:
  DocRetrieverRepo: # repo holding the serverless container image for grant docs retriever
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "uspto-grants-doc-repository"
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                !Join [":", ["arn:aws:iam:", !Ref AWS::AccountId, user/psv_app]]
            Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
              - "ecr:GetAuthorizationToken"

  DocRetrieverStackS3Bucket: # bucket holding the serverless template file
    Type: AWS::S3::Bucket
    Properties:
      BucketName: doc-retriever-stack-bucket
      AccessControl: BucketOwnerFullControl

  DocStorageBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: uspto-documents-storage
      AccessControl: BucketOwnerFullControl

  DocStorageBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: uspto-documents-storage
      PolicyDocument:
        Statement:
          - Sid: PublicRead
            Effect: Allow
            Principal: "*"
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
            Resource:
              - arn:aws:s3:::uspto-documents-storage/*
          - Sid: ReadWrite
            Effect: Allow
            Principal:
              AWS:
                !Join [":", ["arn:aws:iam:", !Ref AWS::AccountId, user/psv_app]]
            Action:
              - s3:*
            Resource:
              - arn:aws:s3:::uspto-documents-storage/*

  MountTargetVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/20
      Tags:
        - Key: stack
          Value: psv
        - Key: Name
          Value: !Ref AWS::StackName

  MountTargetSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref MountTargetVPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "subnet-one"]]

  MountTargetSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MountTargetVPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref "AWS::StackName", "subnet-two"]]

  privateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MountTargetVPC
  privateSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MountTargetSubnetOne
      RouteTableId: !Ref privateRouteTable
  privateSubnetTwoRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MountTargetSubnetTwo
      RouteTableId: !Ref privateRouteTable

  FileSystemResource:
    Type: "AWS::EFS::FileSystem"

  MountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystemResource
      SubnetId: !Ref MountTargetSubnetOne
      SecurityGroups:
        - !GetAtt MountTargetVPC.DefaultSecurityGroup

  MountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref FileSystemResource
      SubnetId: !Ref MountTargetSubnetTwo
      SecurityGroups:
        - !GetAtt MountTargetVPC.DefaultSecurityGroup

  EfsAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref FileSystemResource
      PosixUser:
        Uid: "1001"
        Gid: "1001"
      RootDirectory:
        CreationInfo:
          OwnerGid: "1001"
          OwnerUid: "1001"
          Permissions: "755"
        Path: "/efs-nodejs-storage"

Outputs:
  PrivateSecurityGroup:
    Description: "The PrivateSecurityGroup resource"
    Value: !GetAtt MountTargetVPC.DefaultSecurityGroup
    Export:
      Name: "PrivateSecurityGroup"
  PrivateSubnetOne:
    Description: "The MountTargetSubnetOne resource"
    Value: !Ref MountTargetSubnetOne
    Export:
      Name: "PrivateSubnetOne"
  PrivateSubnetTwo:
    Description: "The MountTargetSubnetTwo resource"
    Value: !Ref MountTargetSubnetTwo
    Export:
      Name: "PrivateSubnetTwo"
  MountTargetVpcID:
    Description: VPC ID
    Value: !Ref MountTargetVPC
    Export:
      Name: "MountTargetVpcID"
  FileSystemResourceId:
    Description: File system ID
    Value: !Ref FileSystemResource
    Export:
      Name: "FileSystemResourceId"
  MountTarget1:
    Description: Mount point A ID
    Value: !Ref MountTarget1
    Export:
      Name: "MountTarget1"
  MountTarget2:
    Description: Mount point B ID
    Value: !Ref MountTarget2
    Export:
      Name: "MountTarget2"
  EfsAccessPointArn:
    Description: Access point ARN
    Value: !GetAtt EfsAccessPoint.Arn
    Export:
      Name: "EfsAccessPointArn"
